services:
  postgres:
    image: postgres:16
    container_name: portal-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: portal-minio
    restart: unless-stopped
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data

  create-bucket:
    image: minio/mc:latest
    container_name: portal-minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      /usr/bin/mc mb -p local/${S3_BUCKET} || true &&
      exit 0
      "

  mailpit:
    image: axllent/mailpit:latest
    container_name: portal-mailpit
    restart: unless-stopped
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP


  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: portal-api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      DATABASE_URL: ${DATABASE_URL}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      RPC_HTTP_URL: ${RPC_HTTP_URL}
      COMPLAINT_REGISTRY_ADDRESS: ${COMPLAINT_REGISTRY_ADDRESS}
      CHAIN_ID: ${CHAIN_ID}
      ETH_PRIVATE_KEY: ${ETH_PRIVATE_KEY}
      # NEW:
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_TLS: ${SMTP_TLS}
      FROM_EMAIL: ${FROM_EMAIL}
      FROM_NAME: ${FROM_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_MIN: ${JWT_EXPIRES_MIN}
    depends_on:
      - postgres
      - minio
      - create-bucket
    ports:
      - "8000:8000"
    networks:
      - default        # keep default so API still sees postgres/minio
      - besu-net       # add this so API sees besu-rpc

volumes:
  postgres_data:
  minio_data: